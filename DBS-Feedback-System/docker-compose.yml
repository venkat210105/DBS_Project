version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0.35
    container_name: dbs-feedback-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-dbs_feedback}
      MYSQL_USER: ${MYSQL_USER:-dbsuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-dbspass123}
      MYSQL_ROOT_HOST: '%'
    ports:
      - "${MYSQL_PORT:-3307}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - feedback-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-root123}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: >
      --default-authentication-plugin=mysql_native_password
      --bind-address=0.0.0.0
      --max_connections=200
      --innodb_buffer_pool_size=256M

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dbs-feedback-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-8085}:8085"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILE:-docker}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE:-dbs_feedback}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER:-dbsuser}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD:-dbspass123}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: false
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQL8Dialect
      ML_SERVICE_URL: http://ml-service:5000
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - feedback-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dbs-feedback-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    environment:
      REACT_APP_API_URL: http://localhost:${BACKEND_PORT:-8085}
      REACT_APP_ML_SERVICE_URL: http://localhost:5000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - feedback-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # ML Sentiment Analysis Service
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    container_name: dbs-feedback-ml-service
    restart: unless-stopped
    ports:
      - "${ML_SERVICE_PORT:-5000}:5000"
    environment:
      PYTHONUNBUFFERED: 1
      MODEL_PATH: /home/appuser/models
    networks:
      - feedback-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s

volumes:
  mysql_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data/mysql}

networks:
  feedback-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
